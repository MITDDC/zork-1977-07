<DEFINE MSETG (FOO BAR) <SETG .FOO .BAR> <MANIFEST .FOO>>

; "ROOM DEFINITIONS
    1. ROOM ID (NAME)
    2. LONG DESCRIPTION
    3. SHORT DESCRIPTION
    4. VISITED SWITCH
    5. ENDOGENOUS LIGHT SOURCE SWITCH
    6. EXITS FROM ROOM
    7. ROOM-ACTION FUNCTION
"

<NEWTYPE ROOM
	 VECTOR
	 '<<PRIMTYPE VECTOR> ATOM
			     STRING
			     STRING
			     <OR ATOM FALSE>
			     <OR ATOM FALSE>
			     EXIT
			     <LIST [REST OBJECT]>
			     <OR APPLICABLE FALSE>
			     <PRIMTYPE WORD>
			     FIX>>

<MSETG RID 1>
<MSETG RDESC1 2>
<MSETG RDESC2 3>
<MSETG RSEEN? 4>
<MSETG RLIGHT? 5>
<MSETG REXITS 6>
<MSETG ROBJS 7>
<MSETG RACTION 8>
<MSETG RVARS 9>
<MSETG RVAL 10>

; "EXITS ARE DIRECTION/ROOM-CEXIT PAIRS"

<NEWTYPE EXIT 
	 VECTOR
	 '<<PRIMTYPE VECTOR> [REST ATOM <OR ROOM CEXIT NEXIT>]>>

; "CONDITION EXITS ARE CONDITION FLAG, DESCRIPTION, AND ROOM"
   
<NEWTYPE CEXIT
	 VECTOR
	 '<<PRIMTYPE VECTOR> ATOM ROOM <OR FALSE STRING>>>

<MSETG CXFLAG 1>
<MSETG CXROOM 2>
<MSETG CXSTR 3>

<NEWTYPE NEXIT STRING>
<NEWTYPE BUZZ STRING>
<NEWTYPE DIRECTION ATOM>
<NEWTYPE ADJECTIVE ATOM>
<NEWTYPE PREP ATOM>
<NEWTYPE OPTARG ATOM>

; "PREPOSITIONAL PHRASES"

<NEWTYPE PHRASE VECTOR '<<PRIMTYPE VECTOR> PREP OBJECT>>

<MSETG PPREP 1>
<MSETG POBJ 2>

; "ADVENTURER"

<NEWTYPE ADV
	 VECTOR
	 '<<PRIMTYPE VECTOR> ROOM <LIST [REST OBJECT]> FIX>>

<MSETG AROOM 1>
<MSETG AOBJS 2>
<MSETG ASCORE 3>

<NEWTYPE OBJECT
	 VECTOR
	 '<<PRIMTYPE VECTOR>
	   ATOM
	   <UVECTOR [REST ATOM]>
	   STRING
	   STRING
	   <OR STRING FALSE>
	   <OR FALSE APPLICABLE>
	   <LIST [REST OBJECT]>
	   <OR FALSE OBJECT>
	   <PRIMTYPE WORD>
	   <OR ATOM FALSE>
	   FIX
	   FIX
	   FIX
	   ANY
	   <OR ATOM FALSE>
	   FIX
	   FIX
	   <UVECTOR [REST ATOM]>>>

<MSETG OID 1>		;"UNIQUE NAME:  ATOM IN OBJECTS, SETG'ED TO THIS"
<MSETG ONAMES 2>	;"UVECTOR OF SYNONYMS"
<MSETG ODESC1 3>	;"DESCRIPTION WHEN ON GROUND"
<MSETG ODESC2 4>	;"SHORT DESCRIPTION"
<MSETG ODESCO 5>	;"DESCRIPTION WHEN UNTOUCHED"
<MSETG OACTION 6>	;"APPLICABLE"
<MSETG OCONTENTS 7>	;"LIST OF FROBS"
<MSETG OCAN 8>		;"WHAT CONTAINS THIS?"
<MSETG OFLAGS 9>	;"RANDOM FLAGS"
<MSETG OTOUCH? 10>	;"HAS THIS BEEN TOUCHED?"
<MSETG OLIGHT? 11>	;"LIGHT PRODUCER?"
<MSETG OFVAL 12>	;"VALUE FOR FINDING IT"
<MSETG OTVAL 13>	;"VALUE FOR PUTTING IN TROPHY CASE"
<MSETG ORAND 14>	;"RANDOM SLOT"
<MSETG OOPEN? 15>	;"IS THIS OPEN?"
<MSETG OSIZE 16>	;"HOW BIG?"
<MSETG OCAPAC 17>	;"HOW MUCH CAN IT HOLD?"
<MSETG OADJS 18>	;"ADJECTIVES FOR THIS"

"GENERALIZED OFLAGS TESTER"
<DEFMAC TRNN ('OBJ 'BIT)
  <FORM N==? <FORM CHTYPE <FORM ANDB .BIT <FORM OFLAGS .OBJ>> FIX> 0>>
<DEFMAC TRZ ('OBJ 'BIT)
  <FORM PUT
	.OBJ
	,OFLAGS
	<FORM ANDB <FORM OFLAGS .OBJ> <FORM XORB .BIT -1>>>>
<DEFMAC TRO ('OBJ 'BIT)
  <FORM PUT
	.OBJ
	,OFLAGS
	<FORM ORB <FORM OFLAGS .OBJ> .BIT>>>

"BITS IN OFLAGS"
"VISIBLE?"
<DEFMAC OVIS? ('OBJ)
  <FORM TRNN .OBJ ,OVISON>>
<MSETG OVISON 1>
<MSETG OVISOFF *777777777776*>
"READABLE?"
<MSETG READBIT 2>
<DEFMAC READABLE? ('OBJ)
    <FORM TRNN .OBJ ,READBIT>>
"THIEF (&C) CAN TAKE IT"
<MSETG TAKEBIT 4>
<DEFMAC CAN-TAKE? ('OBJ)
    <FORM TRNN .OBJ ,TAKEBIT>>
"AM I A DOOR?"
<MSETG DOORBIT 8>
<DEFMAC DOOR? ('OBJ)
    <FORM TRNN .OBJ ,DOORBIT>>
"CAN I BE OPENED?"
<DEFMAC OPENABLE? ('OBJ)
    <FORM TRNN .OBJ <FORM + ,DOORBIT ,CONTBIT>>>
"AM I TRANSPARENT?"
<MSETG TRANSBIT 16>
<DEFMAC TRANSPARENT? ('OBJ)
    <FORM TRNN .OBJ ,TRANSBIT>>
<MSETG FOODBIT 32>
<DEFMAC EDIBLE? ('OBJ)
    <FORM TRNN .OBJ ,FOODBIT>>
<MSETG NDESCBIT 64>
<DEFMAC DESCRIBABLE? ('OBJ)
    <FORM NOT <FORM TRNN .OBJ ,NDESCBIT>>>
<MSETG DRINKBIT 128>
<DEFMAC DRINKABLE? ('OBJ)
    <FORM TRNN .OBJ ,DRINKBIT>>
<MSETG CONTBIT 256>
<MSETG LIGHTBIT 512>
<MSETG VICBIT 1024>

<DEFMAC SEE-INSIDE? ('OBJ)
    <FORM AND
	  <FORM OVIS? .OBJ>
	  <FORM OR
		<FORM TRANSPARENT? .OBJ>
		<FORM OOPEN? .OBJ>>>>

<NEWTYPE HACK
	 VECTOR
	 '<<PRIMTYPE VECTOR> ROOM OBJECT <LIST [REST OBJECT]>
			     <OR APPLICABLE FALSE> <LIST [REST ROOM]> ANY>>

<MSETG HROOM 1>
<MSETG HOBJ 2>
<MSETG HOBJS 3>
<MSETG HACTION 4>
<MSETG HROOMS 5>
<MSETG HFLAG 6>

; "FIND DECLARATIONS"

<NEWTYPE FIND
	 VECTOR
	 '<<PRIMTYPE VECTOR> FIX <OR ATOM FALSE> <OR ATOM FALSE> <OR ATOM FALSE>>>

<MSETG FBIT 1>

<MSETG FAOBJ 2>

<MSETG FROBJ 3>

<MSETG FTAKE 4>

; "VERB DECLARATIONS"

<NEWTYPE VDECL
	 VECTOR
	 '<<PRIMTYPE VECTOR> <OR FALSE <VECTOR ATOM <OR ATOM FIND VECTOR>>>
			     <OR FALSE <VECTOR ATOM <OR ATOM FIND VECTOR>>>>>

<MSETG ARG1 1>

<MSETG ARG2 2>

<MSETG ATYPE 1>

<MSETG ASPEC 2>

; "VERBS ARE NAME + STRING NAME + FUNCTION TO APPLY + LIST OF SYNONYMS"

<NEWTYPE VERB
	 VECTOR
	 '<<PRIMTYPE VECTOR> ATOM
			     <OR APPLICABLE FALSE>
			     VDECL
			     STRING>>
			     
<MSETG VNAME 1>
<MSETG VFCN 2>
<MSETG VARGS 3>
<MSETG VSTR 4>

<PUT PRSOBJ DECL '<OR FALSE DIRECTION OBJECT PHRASE>>

<SETG LOAD-MAX 100>
<SETG SCORE-MAX 0>

<GDECL (LOAD-MAX SCORE-MAX) FIX (RANDOM-LIST ROOMS SACRED-PLACES) <LIST [REST ROOM]>
       (OBJECTS WEAPONS NASTIES) <LIST [REST OBJECT]> (PRSVEC) <VECTOR [3 ANY]>>



"UTILITY FUNCTIONS"

"TO OPEN DOORS"

<DEFMAC COND-OPEN ('DIR 'RM)
    <FORM SETG <FORM CXFLAG <FORM 2 <FORM MEMQ .DIR <FORM REXITS .RM>>>> T>>

<DEFMAC COND-CLOSE ('DIR 'RM)
    <FORM SETG <FORM CXFLAG <FORM 2 <FORM MEMQ .DIR <FORM REXITS .RM>>>> <>>>

"APPLY AN OBJECT FUNCTION"

<DEFMAC APPLY-OBJECT ('OBJ)
    <FORM COND (<FORM OACTION .OBJ> <FORM APPLY <FORM OACTION .OBJ>>)>>

"FLUSH AN OBJECT FROM A ROOM"

<DEFMAC REMOVE-OBJECT ('OBJ 'ROOM) 
	<FORM PUT
	      .ROOM
	      ,ROBJS
	      <FORM SPLICE-OUT <FORM PUT .OBJ ,OTOUCH? T> <FORM ROBJS .ROOM>>>>

<DEFMAC INSERT-OBJECT ('OBJ 'ROOM)
	<FORM PUT .ROOM ,ROBJS (.OBJ <CHTYPE <FORM ROBJS .ROOM> SEGMENT>)>>

"ROB-ADV:  TAKE ALL OF THE VALUABLES A HACKER IS CARRYING"

<DEFINE ROB-ADV (WIN NEWLIST)
  #DECL ((WIN) ADV (NEWLIST) <LIST [REST OBJECT]>)
  <MAPF <>
    <FUNCTION (X) #DECL ((X) OBJECT)
      <COND (<G? <OTVAL .X> 0>
	     <PUT .WIN ,AOBJS <SPLICE-OUT .X <AOBJS .WIN>>>
	     <SET NEWLIST (.X !.NEWLIST)>)>>
    <AOBJS .WIN>>
  .NEWLIST>

"ROB-ROOM:  TAKE VALUABLES FROM A ROOM, PROBABILISTICALLY"

<DEFINE ROB-ROOM (RM NEWLIST PROB)
  #DECL ((RM) ROOM (NEWLIST) <LIST [REST OBJECT]> (PROB) FIX)
  <MAPF <>
    <FUNCTION (X) #DECL ((X) OBJECT)
      <COND (<AND <G? <OTVAL .X> 0>
		  <OVIS? .X>
		  <PROB .PROB>>
	     <REMOVE-OBJECT .X .RM>
	     <PUT .X ,OTOUCH? T>
	     <SET NEWLIST (.X !.NEWLIST)>)>>
    <ROBJS .RM>>
  .NEWLIST>

<DEFINE VALUABLES? (ADV)
  #DECL ((ADV) ADV)
  <MAPF <>
    <FUNCTION (X) #DECL ((X) OBJECT)
      <COND (<G? <OTVAL .X> 0> <MAPLEAVE T>)>>
    <AOBJS .ADV>>>

<DEFINE ARMED? (ADV "AUX" (WEAPONS ,WEAPONS))
  #DECL ((ADV) ADV)
  <MAPF <>
    <FUNCTION (X) #DECL ((X) OBJECT)
      <COND (<MEMQ .X .WEAPONS>
	     <MAPLEAVE T>)>>
    <AOBJS .ADV>>>

<DEFINE LIGHT-SOURCE (ME)
	#DECL ((ME) ADV)
	<MAPF <>
	      <FUNCTION (X)
	         <COND (<NOT <0? <OLIGHT? .X>>>
			<MAPLEAVE .X>)>>
	      <AOBJS .ME>>>

<DEFINE GET-DEMON (ID "AUX" (OBJ <FIND-OBJ .ID>) (DEMS ,DEMONS))
  #DECL ((ID) STRING (OBJ) OBJECT (DEMS) <LIST [REST HACK]>)
  <MAPF <>
    <FUNCTION (X) #DECL ((X) HACK)
      <COND (<==? <HOBJ .X> .OBJ> <MAPLEAVE .X>)>>
    .DEMS>>

<DEFMAC PICK-ONE ('VEC) 
	<FORM NTH .VEC <FORM + 1 <FORM MOD <FORM RANDOM> <FORM LENGTH .VEC>>>>>

<DEFMAC GOTO ('RM) 
    <FORM PROG ()
      <FORM PUT
	    <FORM GVAL WINNER>
	    ,AROOM
	    <FORM SETG HERE .RM>>
      <FORM PUT
	    <FORM GVAL WINNER>
	    ,ASCORE
	    <FORM +
		  <FORM ASCORE <FORM GVAL WINNER>>
		  <FORM RVAL .RM>>>
      <FORM PUT
	    .RM
	    ,RVAL
	    0>>>
